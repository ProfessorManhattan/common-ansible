{
  "name": "ansible-project",
  "version": "1.0.0",
  "description": "Node files that support the development of Ansible roles",
  "license": "MIT",
  "author": "Brian Zalewski <brian@megabyte.space> (https://megabyte.space)",
  "homepage": "https://install.doctor",
  "repository": {
    "type": "git",
    "url": "git+https://gitlab.com/ProfessorManhattan/ANSIBLE_ROLE_NAME.git"
  },
  "bugs": {
    "email": "help@megabyte.space",
    "url": "https://gitlab.com/ProfessorManhattan/ANSIBLE_ROLE_NAME/-/issues"
  },
  "scripts": {
    "commit": "git-cz",
    "fix": "run-s fix:*",
    "fix:black": "black .",
    "fix:prettier": "prettier --write . && prettier-package-json --write",
    "fix:shellcheck": "find . -type d \\( -name .cache -o -name .git -o -name .modules  -o -name node_modules -o -name .husky \\) -prune -o -type f \\( -name \\*.sh -o -name \\*.sh.j2 \\) -print0 | xargs -0 shellcheck -f diff | git apply",
    "info": "npm-scripts-info",
    "postinstall": "husky install && run-s update",
    "lint": "run-s lint:*",
    "lint:ansible": "run-s misc:symlink-roles && ansible-lint",
    "lint:black": "black . --check",
    "lint:flake8": "flake8 .",
    "lint:hadolint": "find . -type d \\( -name .cache -o -name .git -o -name .modules  -o -name node_modules -o -name .husky -o -name test \\) -prune -o -type f \\( -name Dockerfile -o -name Dockerfile.j2 \\) -print0 | xargs -0 -r -n1 docker run -v ${PWD}:/work -w /work hadolint/hadolint:latest hadolint",
    "lint:prettier": "prettier --list-different .",
    "lint:shellcheck": "find . -type d \\( -name .cache -o -name .git -o -name .modules  -o -name node_modules -o -name .husky -o -name .start.sh \\) -prune -o -type f \\( -name \\*.sh -o -name \\*.sh.j2 \\) -print0 | xargs -0 -r -n1 shellcheck",
    "lint:staged": "lint-staged",
    "lint:yaml": "yamllint .",
    "misc:find-missing-logos": "find ./roles -mindepth 2 -maxdepth 2 -type d '!' -exec test -e \"{}/logo.png\" ';' -print",
    "misc:markdown-links": "find . -type d \\( -name .cache -o -name .git -o -name .github -o -name .gitlab -o -name .modules  -o -name node_modules \\) -prune -o -type f \\( -name \\*.md \\) -print0 | xargs -0 -r -n1 markdown-link-check",
    "misc:symlink-roles": "export ANSIBLE_GALAXY_USERNAME_PREFIX=professormanhattan. && BASE_DIR=\"$PWD\"; find ./roles -mindepth 2 -maxdepth 2 -type d -print0 | while read -d $'\\0' ROLE_PATH; do; local ROLE_BASENAME=$(basename $ROLE_PATH); if [ ! -d ~/.ansible/roles/\"${ANSIBLE_GALAXY_USERNAME_PREFIX}${ROLE_BASENAME}\" ]; then; ln -sf \"$BASE_DIR/$ROLE_PATH\" ~/.ansible/roles/\"${ANSIBLE_GALAXY_USERNAME_PREFIX}$ROLE_BASENAME\"; fi; done",
    "prepare-release": "run-s update lint test version",
    "start": "run-s update",
    "test": "vagrant up",
    "update": "bash .start.sh && cp ./.modules/ansible/.start.sh .start.sh",
    "version": "standard-version --no-verify"
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "devDependencies": {
    "@megabytelabs/prettier-config": "^1.0.0",
    "@megabytelabs/prettier-config-ansible": "^1.0.0",
    "consola": "^2.15.3",
    "cspell": "^5.6.3",
    "cz-conventional-changelog": "^3.3.0",
    "husky": "^6.0.0",
    "lint-staged": "^11.0.0",
    "markdown-link-check": "^3.8.7",
    "npm-run-all": "^4.1.5",
    "npm-scripts-info": "^0.3.9",
    "prettier": "^2.3.1",
    "prettier-package-json": "^2.6.0",
    "prettier-plugin-sh": "^0.6.1",
    "shellcheck": "^1.0.0",
    "standard-version": "^9.3.0"
  },
  "keywords": [
    "ansible",
    "archlinux",
    "centos",
    "debian",
    "fedora",
    "macos",
    "megabytelabs",
    "molecule",
    "playbook",
    "professormanhattan",
    "ubuntu",
    "windows"
  ],
  "engines": {
    "node": ">=10"
  },
  "funding": [
    {
      "type": "opencollective",
      "url": "https://opencollective.com/megabytelabs"
    },
    {
      "type": "patreon",
      "url": "https://www.patreon.com/ProfessorManhattan"
    }
  ],
  "lint-staged": {
    "**/*": [
      "check-merge-conflict",
      "check-added-large-files",
      "check-case-conflict",
      "check-docstring-first",
      "check-executables-have-shebangs",
      "check-symlinks",
      "detect-private-key"
    ],
    "**/*.{js,json,md,ts,yml}": [
      "prettier --write"
    ],
    "**/*.{sh,sh.j2}": [
      "prettier --write",
      "shellcheck"
    ],
    "**/*.xml": [
      "check-xml"
    ],
    "**/*.yml": [
      "check-yaml",
      "yamllint"
    ],
    "package.json": [
      "prettier-package-json --write"
    ],
    "requirements.txt": [
      "requirements-txt-fixer"
    ],
    "{**/*.yml,**/*.json}": [
      "prettier --write"
    ],
    "{**/*.sh,**/*.sh.j2": [
      "prettier --write",
      "docker run -v \"$PWD:/mnt\" koalaman/shellcheck"
    ]
  },
  "prettier": "@megabytelabs/prettier-config-ansible",
  "scripts-info": {
    "commit": "IMPORTANT: Whenever committing code run 'git-cz' or 'npm run commit' - this command will automatically test and prompt with an interactive questionnaire to populate proper commit messages",
    "fix:prettier": "Automatically format files with Prettier",
    "fix:shellcheck": "Attempts to automatically fix shell scripts",
    "info": "Displays descriptions of all the npm tasks",
    "lint:prettier": "Checks for presence of files that Prettier wants to format differently",
    "lint:shellcheck": "Performs linting of shell scripts",
    "lint:staged": "Performs many validations on only the current commit's staged files",
    "misc:markdown-links": "Checks markdown files for broken links",
    "prepare-release": "Prepares the repository for a release",
    "version": "Used by 'npm run prepare-release' to update the CHANGELOG",
    "fix": "Automatically fix formatting errors",
    "fix:black": "Automatically format Python files",
    "lint": "Report all linting errors",
    "lint:ansible": "Runs ansible-lint which has rules specific to Ansible projects",
    "lint:black": "Runs Black which formats Python files",
    "lint:docker": "Runs hadolint on all Dockerfile and Dockerfile.j2 files",
    "lint:flake8": "Runs flake8 which lints Python files",
    "lint:hadolint": "Lints Dockerfiles",
    "lint:yaml": "Runs yamllint which is a general purpose linter for YAML files",
    "misc:find-missing-logos": "When this command is run in the main playbook root directory, it will report all of the roles that are missing the logo.png file",
    "misc:symlink-roles": "Symlinks all roles to ~/.ansible/roles. For example, the androidstudio role would have a symlink at ~/.ansible/roles/professormanhattan.androidstudio.",
    "shell:OS_NAME": "Open a Docker shell session for debugging (OS_NAME can be archlinux, centos, debian, fedora, macos, ubuntu, or windows",
    "test": "Runs molecule tests for all the supported operating systems using VirtualBox (this is RAM intensive)",
    "test:docker": "Runs Docker molecule tests on Linux flavors that support snap packages",
    "test:local": "Installs the role on your local machine",
    "test:OS_NAME": "Provisions a full desktop VirtualBox VM, installs the roles, and does not delete the VM after testing for further inspection (OS NAME can be archlinux, centos, debian, fedora, macos, ubuntu, or windows)",
    "update": "Runs .start.sh to automatically update meta files and documentation"
  },
  "standard-version": {
    "scripts": {
      "prerelease": "git add --all"
    }
  }
}
