{
  "name": "ansible-project",
  "description": "Node files that support the development of Ansible roles",
  "license": "MIT",
  "author": "Brian Zalewski <brian@megabyte.space> (https://megabyte.space)",
  "version": "1.0.0",
  "scripts": {
    "commit": "git-cz",
    "fix": "run-s fix:*",
    "fix:black": "black .",
    "fix:prettier": "prettier --write . '!{.husky/_/husky.sh,.gitmodules}' && prettier-package-json --write",
    "fix:shellcheck": "find . -type d \\( -name .cache -o -name .git -o -name .modules  -o -name node_modules -o -name .husky \\) -prune -o -type f \\( -name \\*.sh -o -name \\*.sh.j2 \\) -print0 | xargs -0 shellcheck -f diff | git apply",
    "info": "npm-scripts-info",
    "postinstall": "husky install && run-s update",
    "lint": "run-s lint:*",
    "lint:ansible": "ansible-lint",
    "lint:black": "black . --check",
    "lint:flake8": "flake8 --verbose .",
    "lint:hadolint": "find . -type d \\( -name .cache -o -name .git -o -name .modules  -o -name node_modules -o -name .husky -o -name test \\) -prune -o -type f \\( -name Dockerfile -o -name Dockerfile.j2 \\) -print0 | xargs -0 -r -n1 docker run -v ${PWD}:/work -w /work hadolint/hadolint:latest hadolint",
    "lint:prettier": "prettier --list-different . '!{.husky/_/husky.sh,.gitmodules}'",
    "lint:shellcheck": "find . -type d \\( -name .cache -o -name .git -o -name .modules  -o -name node_modules -o -name .husky \\) -prune -o -type f \\( -name \\*.sh -o -name \\*.sh.j2 \\) -print0 | xargs -0 -r -n1 shellcheck",
    "lint:yaml": "yamllint .",
    "prepare-release": "run-s update lint test version",
    "start": "run-s update",
    "test": "molecule test",
    "test:docker": "molecule test -s docker",
    "test:local": "ansible-playbook --ask-sudo-pass --connection=local tests/test.yml",
    "test:archlinux": "molecule converge -s archlinux-desktop",
    "test:centos": "molecule converge -s centos-desktop",
    "test:debian": "molecule converge -s debian-desktop",
    "test:fedora": "molecule converge -s fedora-desktop",
    "test:macos": "molecule converge -s macos-desktop",
    "test:ubuntu": "molecule converge -s ubuntu-desktop",
    "test:windows": "molecule converge -s windows-desktop",
    "update": "bash .start.sh && cp ./.modules/ansible/.start.sh .start.sh",
    "version": "standard-version --no-verify"
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "devDependencies": {
    "@megabytelabs/prettier-config-ansible": "^1.0.0",
    "consola": "^2.15.3",
    "cspell": "^5.3.3",
    "cz-conventional-changelog": "^3.3.0",
    "husky": "^5.1.1",
    "lint-staged": "^10.5.4",
    "npm-run-all": "^4.1.5",
    "npm-scripts-info": "^0.3.9",
    "prettier": "^2.1.1",
    "prettier-package-json": "^2.1.3",
    "prettier-plugin-sh": "^0.6.0",
    "shellcheck": "^1.0.0",
    "standard-version": "^9.0.0"
  },
  "funding": [
    {
      "type": "opencollective",
      "url": "https://opencollective.com/megabytelabs"
    },
    {
      "type": "patreon",
      "url": "https://www.patreon.com/ProfessorManhattan"
    }
  ],
  "lint-staged": {
    "{**/*.yml,**/*.json}": [
      "prettier --write"
    ],
    "{**/*.sh,**/*.sh.j2": [
      "prettier --write",
      "docker run -v \"$PWD:/mnt\" koalaman/shellcheck"
    ],
    "package.json": [
      "prettier-package-json --write"
    ]
  },
  "prettier": "@megabytelabs/prettier-config-ansible",
  "scripts-info": {
    "commit": "IMPORTANT: Whenever committing code run 'git-cz' or 'npm run commit' - this command will automatically test and prompt with an interactive questionaire to populate proper commit messages",
    "fix": "Automatically fix formatting errors",
    "info": "Displays descriptions of all the npm tasks",
    "lint": "Report all linting errors",
    "lint:ansible": "Runs ansible-lint which has rules specific to Ansible projects",
    "lint:black": "Runs Black which lints Python files",
    "lint:docker": "Runs hadolint on all Dockerfile and Dockerfile.j2 files",
    "lint:flake8": "Runs flake8 which lints Python files",
    "lint:prettier": "Checks for presence of files that Prettier wants to format differently",
    "lint:shellcheck": "Performs linting of shell scripts",
    "lint:yaml": "Runs yamllint which is a general purpose linter for YAML files",
    "prepare-release": "Prepares the repository for a release",
    "test": "Runs molecule tests for all the supported operating systems using VirtualBox (this is RAM intensive)",
    "test:docker": "Runs molecule tests using Docker",
    "test:local": "Installs the role on your local machine",
    "test:archlinux": "Provisions an Archlinux Desktop VirtualBox VM, installs the role(s), and does not delete the VM after testing for further inspection",
    "test:centos": "Provisions a CentOS Desktop VirtualBox VM, installs the role(s), and does not delete the VM after testing for further inspection",
    "test:debian": "Provisions a Debian Desktop VirtualBox VM, installs the role(s), and does not delete the VM after testing for further inspection",
    "test:fedora": "Provisions a Fedora Desktop VirtualBox VM, installs the role(s), and does not delete the VM after testing for further inspection",
    "test:macos": "Provisions a macOS Desktop VirtualBox VM, installs the role(s), and does not delete the VM after testing for further inspection",
    "test:ubuntu": "Provisions a Ubuntu Desktop VirtualBox VM, installs the role(s), and does not delete the VM after testing for further inspection",
    "test:windows": "Provisions a Windows Desktop VirtualBox VM, installs the role(s), and does not delete the VM after testing for further inspection",
    "update": "Runs .start.sh to automatically update meta files and documentation",
    "version": "Used by 'npm run prepare-release' to update the CHANGELOG"
  }
}
