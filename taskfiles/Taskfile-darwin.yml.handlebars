---
version: '3'

tasks:
  docker:
    cmds:
      - task: install-doctor
        vars:
          SOFTWARE: docker
    run: once
    status:
      - type docker &> /dev/null

  dockle:
    cmds:
      - task: install-doctor
        vars:
          SOFTWARE: dockle
    run: once
    status:
      - type dockle &> /dev/null

  exiftool:
    cmds:
      - task: exiftool
        vars:
          SOFTWARE: exiftool
    run: once
    status:
      - type exiftool &> /dev/null

  gh:
    cmds:
      - task: install-doctor
        vars:
          SOFTWARE: gh
    run: once
    status:
      - type gh &> /dev/null

  git:
    cmds:
      - task: install-doctor
        vars:
          SOFTWARE: git
    run: once
    status:
      - type git &> /dev/null

  gitleaks:
    cmds:
      - task: install-doctor
        vars:
          SOFTWARE: gitleaks
    run: once
    status:
      - type gitleaks &> /dev/null

  glab:
    cmds:
      - task: install-doctor
        vars:
          SOFTWARE: glab
    run: once
    status:
      - type glab &> /dev/null

  install-doctor:
    cmds:
      - |
        if ! type \{{.SOFTWARE}} &> /dev/null; then
          true info "Using https://install.doctor to install '\{{.SOFTWARE}}'"
          curl -sS https://install.doctor/\{{.SOFTWARE}} | bash
        fi

  jq:
    cmds:
      - task: install-doctor
        vars:
          SOFTWARE: jq
    run: once
    status:
      - type jq &> /dev/null

  node:
    cmds:
      - task: install-doctor
        vars:
          SOFTWARE: node
    run: once
    status:
      - type node &> /dev/null
      - type npm &> /dev/null
      - type npx &> /dev/null

  python:
    vars:
      MINICONDA_DOWNLOAD_CHECKSUM: b3bf77cbb81ee235ec6858146a2a84d20f8ecdeb614678030c39baacb5acbed1
      MINICONDA_DOWNLOAD_URL: https://repo.anaconda.com/miniconda/Miniconda3-py39_4.9.2-MacOSX-x86_64.sh
    cmds:
      - |
        if ! type python3 &> /dev/null; then
          true warn "Python 3 is missing from your computer"
          true info "Installing Python 3 rootlessly using Miniconda"
          curl -sS \{{.MINICONDA_DOWNLOAD_URL}} > miniconda.sh
          echo "\{{.MINICONDA_DOWNLOAD_CHECKSUM}} miniconda.sh" | sha256sum --check
          mkdir -p "$HOME/.local"
          bash miniconda.sh -b -p "$HOME/.local/miniconda"
          rm miniconda.sh
          export PATH="$HOME/.local/miniconda/bin:$PATH"
          if grep -L '.local/miniconda/bin' "$HOME/.bash_profile"; then
            true info "Updating the '.bash_profile' file to include Miniconda Python 3 in the PATH environment variable"
            echo -e '\nexport PATH=$HOME/.local/miniconda/bin:$PATH' >> "$HOME/.bash_profile"
          fi
        fi
    run: once
    status:
      - type python3 &> /dev/null

  rsync:
    cmds:
      - task: install-doctor
        vars:
          SOFTWARE: rsync
    run: once
    status:
      - type rsync &> /dev/null

  trivy:
    cmds:
      - task: install-doctor
        vars:
          SOFTWARE: trivy
    run: once
    status:
      - type trivy &> /dev/null

  vagrant:
    cmds:
      - task: install-doctor
        vars:
          SOFTWARE: vagrant
    run: once
    status:
      - type vagrant &> /dev/null

  virtualbox:
    cmds:
      - task: install-doctor
        vars:
          SOFTWARE: virtualbox
    run: once
    status:
      - type virtualbox &> /dev/null

  yq:
    cmds:
      - task: install-doctor
        vars:
          SOFTWARE: yq
    run: once
    status:
      - type yq &> /dev/null
